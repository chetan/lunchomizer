
<%= csrf_meta_tag %>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript" charset="utf-8"></script>

<%= stylesheet_link_tag "960", "reset", "text", :media => "screen, projection" %>
<%= stylesheet_link_tag "lunch" %>

<script src="http://code.google.com/apis/gears/gears_init.js" type="text/javascript"></script>

<%= javascript_include_tag "application", "geo" %>
<%#= javascript_include_tag "geo_position_js_simulator" %>

<%# sensor=false because for these maps, we don't want to use the user's location sine we are
    providing all the input data needed to render correctly. %>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

<%=raw @close_map.header_html if @close_map %>
<%=raw @near_map.header_html if @near_map %>
<%=raw @far_map.header_html if @far_map %>

<%# add click handlers for toggling the maps %>
<script type="text/javascript" charset="utf-8">

    $(window).load(function() {

        $(".toggle_close").click(function() {
            $("#close_info").toggle();
            <%= @close_map.recenter_html() %>
        });

        $(".toggle_near").click(function() {
            $("#near_info").toggle();
            <%= @near_map.recenter_html() %>
        });

        $(".toggle_far").click(function() {
            $("#far_info").toggle();
            <%= @far_map.recenter_html() %>
        });

    });
</script>

<% if @trygeo then %>
<script type="text/javascript">

    // use for testing with a pre-set lat/lng
    // if (geo_position_js_simulator) {
    //     locations=new Array();
    //     locations.push({ coords:{latitude: 40.757912,longitude: -73.9697795},duration:5000 });
    //     geo_position_js_simulator.init(locations);
    // }

    if (geo_position_js.init()) {
        geo_position_js.getCurrentPosition(success_callback,error_callback,{enableHighAccuracy:true,options:5000});
    }

    function success_callback(p) {
        window.location = (window.location + "?lat=" + p.coords.latitude +'&lng=' + p.coords.longitude);
    }

    function error_callback(p) {
    }
</script>
<% end %>
